generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Rol {
  id     Int    @id @default(autoincrement())
  nombre String

  estudiantes     Estudiante[]
  docentes        Docente[]
  administradores Administrador[]
}

model Carrera {
  id          Int      @id @default(autoincrement())
  nombre      String   @unique
  descripcion String?
  clave       String   @unique
  createdAt   DateTime @default(now()) @map("created_at")

  estudiantes Estudiante[]
  docentes    Docente[]
  asignaturas Asignatura[]
}

model Estudiante {
  id          Int      @id @default(autoincrement())
  nombre      String
  apellidos   String
  matricula   String   @unique
  correo      String   @unique
  direccion   String
  telefono    String   @unique
  estado      String
  contraseña String
  createdAt   DateTime @default(now()) @map("created_at")

  rolId     Int
  carreraId Int

  rol     Rol     @relation(fields: [rolId], references: [id])
  carrera Carrera @relation(fields: [carreraId], references: [id])

  calificaciones Calificacion[]
  asistencias    Asistencia[]
  asignaciones   AsignacionesAlumnos[]
}

model AsignacionesAlumnos {
  id                   Int      @id @default(autoincrement())
  estudianteId         Int
  asignatura_docenteId Int
  created_at           DateTime @default(now())

  estudiante         Estudiante        @relation(fields: [estudianteId], references: [id])
  asignatura_docente AsignaturaDocente @relation(fields: [asignatura_docenteId], references: [id])

  @@unique([estudianteId, asignatura_docenteId], name: "unico_asignacion_alumno")
  @@map("asignaciones_alumnos")
}

model Docente {
  id          Int      @id @default(autoincrement())
  nombre      String
  apellidos   String
  telefono    String   @unique
  correo      String   @unique
  contraseña String
  createdAt   DateTime @default(now()) @map("created_at")

  rolId     Int
  carreraId Int?

  rol     Rol      @relation(fields: [rolId], references: [id])
  carrera Carrera? @relation(fields: [carreraId], references: [id])

  asignaturasAsignadas AsignaturaDocente[] // Asignaturas que imparte
}

model Administrador {
  id          Int      @id @default(autoincrement())
  nombre      String
  apellidos   String
  correo      String   @unique
  contraseña String
  createdAt   DateTime @default(now()) @map("created_at")

  rolId Int
  rol   Rol @relation(fields: [rolId], references: [id])
}

model Tutor {
  id        Int      @id @default(autoincrement())
  nombre    String
  apellidos String
  telefono  String   @unique
  createdAt DateTime @default(now()) @map("created_at")
}

model Turno {
  id          Int      @id @default(autoincrement())
  nombre      String
  hora_inicio DateTime
  hora_fin    DateTime
  createdAt   DateTime @default(now()) @map("created_at")
}

model Asignatura {
  id              Int      @id @default(autoincrement())
  nombre          String
  clave           String   @unique
  creditos        Int
  horas_semanales Int
  semestre        Int
  descripcion     String?
  createdAt       DateTime @default(now()) @map("created_at")

  carreraId Int
  carrera   Carrera @relation(fields: [carreraId], references: [id])

  docentes AsignaturaDocente[]
}

model AsignaturaDocente {
  id           Int      @id @default(autoincrement())
  asignaturaId Int
  docenteId    Int
  cicloEscolar String   @map("ciclo_escolar")
  createdAt    DateTime @default(now()) @map("created_at")

  asignatura Asignatura @relation(fields: [asignaturaId], references: [id])
  docente    Docente    @relation(fields: [docenteId], references: [id])

  calificaciones      Calificacion[]
  horarios            Horario[]
  asistencias         Asistencia[]
  AsignacionesAlumnos AsignacionesAlumnos[]
  AsignaturaPeriodo   AsignaturaPeriodo[]

  @@unique([asignaturaId, docenteId, cicloEscolar], name: "unico_asignatura_docente_ciclo")
  @@map("asignatura_docente")
}

model AsignaturaPeriodo {
  id                   Int      @id @default(autoincrement())
  asignatura_docenteId Int
  periodo_evaluacionId Int
  createdAt            DateTime @default(now()) @map("created_at")

  asignaturaDocente AsignaturaDocente @relation(fields: [asignatura_docenteId], references: [id])
  periodoEvaluacion PeriodoEvaluacion @relation(fields: [periodo_evaluacionId], references: [id])

  @@unique([asignatura_docenteId, periodo_evaluacionId], name: "unico_asignatura_periodo")
  @@map("asignatura_periodo")
}

model Horario {
  id                   Int      @id @default(autoincrement())
  asignatura_docenteId Int
  dia_semana           String
  hora_inicio          DateTime
  hora_fin             DateTime
  aula                 String
  createdAt            DateTime @default(now()) @map("created_at")

  asignatura_docente AsignaturaDocente @relation(fields: [asignatura_docenteId], references: [id])
}

model PeriodoEvaluacion {
  id            Int      @id @default(autoincrement())
  nombre        String
  fecha_inicio  DateTime
  fecha_fin     DateTime
  ciclo_escolar String
  porcentaje    Float
  createdAt     DateTime @default(now()) @map("created_at")

  calificaciones    Calificacion[]
  AsignaturaPeriodo AsignaturaPeriodo[]

  @@map("periodo_evaluacion")
}

model Calificacion {
  id                   Int      @id @default(autoincrement())
  estudianteId         Int
  asignatura_docenteId Int
  periodo_evaluacionId Int
  calificacion         Float
  faltas               Int      @default(0)
  observaciones        String?
  fecha_registro       DateTime @default(now())

  estudiante         Estudiante        @relation(fields: [estudianteId], references: [id])
  asignatura_docente AsignaturaDocente @relation(fields: [asignatura_docenteId], references: [id])
  periodo_evaluacion PeriodoEvaluacion @relation(fields: [periodo_evaluacionId], references: [id])

  @@unique([estudianteId, asignatura_docenteId, periodo_evaluacionId], name: "unico_calificacion")
}

model Asistencia {
  id                   Int      @id @default(autoincrement())
  estudianteId         Int
  asignatura_docenteId Int
  fecha                DateTime @db.Time()
  estado               String
  createdAt            DateTime @default(now()) @map("created_at")

  estudiante         Estudiante        @relation(fields: [estudianteId], references: [id])
  asignatura_docente AsignaturaDocente @relation(fields: [asignatura_docenteId], references: [id])

  @@unique([estudianteId, asignatura_docenteId, fecha], name: "unico_asistencia")
}
